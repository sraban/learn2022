// _mixins.scss
@mixin center-absolute() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// $breakpoints: (
//     "xs": (max-width: 575.98px),
//     "sm": ((min-width: 576px) and (max-width: 767.98px)),
//     "md": ((min-width: 768px) and (max-width: 991.98px)),
//     "lg": ((min-width: 992px) and (max-width: 1199.98px)),
//     "xl": ((min-width: 1200px) and (max-width: 1399.98px)),
//     "xxl": (min-width: 1400px),
// );

// built-in SASS module sass:map
// @mixin breakpoint($user-value) {
//     $value: map-get($breakpoints, $user-value);

//     @if $value {
//         @media (#{$value}) {
//             @content;
//         }
//     } @else {
//         @warn "This Breackpoint '#{$user-value}' isn't supported yet";
//     }
// }

@mixin media-mobile() {
  @media (max-width: 1199.98px) {
    @content;
  }
}

@mixin media-tablet() {
  @media (max-width: 1199.98px) {
    @content;
  }
}

@mixin media-desktop() {
  @media (max-width: 1199.98px) {
    @content;
  }
}

@mixin media-desktop-large() {
  @media (max-width: 1199.98px) {
    @content;
  }
}

// Define mixin for media query breakpoints
@mixin media-breakpoint-down($breakpoint) {
  @if $breakpoint ==xs {
    @media (max-width: 575.98px) {
      @content;
    }
  } @else if $breakpoint ==sm {
    @media (max-width: 767.98px) {
      @content;
    }
  } @else if $breakpoint ==md {
    @media (max-width: 991.98px) {
      @content;
    }
  } @else if $breakpoint ==lg {
    @media (max-width: 1199.98px) {
      @content;
    }
  } @else if $breakpoint ==xl {
    @media (max-width: 1599.98px) {
      @content;
    }
  }
}

// Usage example:

.my-component {
  width: 100%;

  @include media-breakpoint-down(sm) {
    width: 50%;
  }

  @include media-breakpoint-down(xs) {
    width: 25%;
  }
}
